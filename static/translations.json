{
  "en": {
    "menu": {
      "Convert To XArray": "Convert To XArray",
      "XArray Dimensions": "XArray Dimensions",
      "Describe": "Describe",
      "Custom Filter": "Custom Filter",
      "Build Column": "Build Column",
      "Summarize Data": "Summarize Data",
      "Correlations": "Correlations",
      "Predictive Power Score": "Predictive Power Score",
      "Charts": "Charts",
      "Heat Map": "Heat Map",
      "Highlight Dtypes": "Highlight Dtypes",
      "Highlight Missing": "Highlight Missing",
      "Highlight Outliers": "Highlight Outliers",
      "Highlight Range": "Highlight Range",
      "Low Variance Flag": "Low Variance Flag",
      "Instances": "Instances",
      "Code Export": "Code Export",
      "Export": "Export",
      "CSV": "CSV",
      "TSV": "TSV",
      "Load Data": "Load Data",
      "Refresh Widths": "Refresh Widths",
      "About": "About",
      "Theme": "Theme",
      "Reload Data": "Reload Data",
      "Shutdown": "Shutdown",
      "Duplicates": "Duplicates",
      "By Col": "By Col",
      "Overall": "Overall",
      "Light": "Light",
      "Dark": "Dark",
      "Range Highlights": "Range Highlights",
      "Index": "Index",
      "Network Viewer": "Network Viewer",
      "Merge & Stack": "Merge & Stack",
      "ALL DATA": "ALL DATA",
      "Unpin menu": "Unpin menu",
      "Pin menu": "Pin menu",
      "pin_menu": "Toggle for pinning this menu to the left side of the screen."
    },
    "menu_description": {
      "describe": "Describe column's values (Top unique values, Min, Max, Sum, STD, Var,...)",
      "filter": "Defining custom Filtering for the main spreadsheet, Charts, ...",
      "build": "Creating a/multi new column based on the existing columns or random values",
      "reshape":  "Create a new grid using either PIVOT table, Aggregations w/ GroupBy or Transpose.",
      "corr": "Presenting correlations matrix and chart",
      "charts": "Plot chart (line, bar, scatter, pie, wordcloud,...)",
      "heatmap": "Presenting heatmap for numerical values in the main table. 'Overall' will calculate over the min/max of every column whereas 'By Col' will calculate each column individually by its min/max.",
      "highlight_dtypes": "Highlight columns based on pandas dtypes. For dtype's name hover the mouse over column name.",
      "highlight_missings": "Highlight any cells which contain \"nan\" values (or in the case of strings, empty strings or strings consisting only of spaces). Also, a \"!\" will be prepended to any column header which contains missing values.",
      "highlight_outliers": "Highlight any cells for numeric columns which surpass the upper or lower bounds of a custom outlier computation. Lower bounds outliers will be on a red scale and upper bounds outliers will be on a blue scale. Also, a \"â˜…\" will be prepended to any column header which contains outliers.",
      "highlight_range": "Highlight any cells for numeric columns which match any of the filters for equals, greater than or less than. Click \"Highlight Range\" to update filters.",
      "instances": "Show existing datasets loaded to D-Tale.",
      "code": "Code snippet of commands performed upon your data to produce this grid.",
      "export": "Download DataFrame as CSV or TSV",
      "widths": "Auto-Resize the column widths",
      "about": "Link to the source code repository, documentation",
      "shutdown": "Close D-Tale and all other open datasets without save. Do you want to export DataFrame?",
      "editing": "Update cells to anything you'd like. Press \"Enter\" to confirm or \"Esc\" to exit. Invalid types will throw errors. Protected values are \"nan\" & \"inf\".",
      "xarray_conversion": "Convert your pandas.Dataframe to an xarray.Dataset by selecting columns as an index. Once this is complete you'll be able to view different slices of your data by choosing index values.",
      "upload": "Load CSV/TSV files, CSV/TSV/JSON from the web or sample datasets to D-Tale using pandas.read_csv(), pandas.read_json() or customized loaders.",
      "duplicates": "Remove duplicate columns/values from your data as well as extract duplicates out into separate instances.",
      "theme": "Toggle between light & dark themes for your viewing pleasure (only affects grid, not popups or charts).",
      "pps": "PPS is an asymmetric, data-type-agnostic score that can detect linear or non-linear relationships between two columns. The score ranges from 0 (no predictive power) to 1 (perfect predictive power). It can be used as an alternative to the correlation (matrix). WARNING: This could take a while to load.",
      "network": "If you're currently viewing data containing information for a directed graph then try feeding it into our \"Network Viewer\"",
      "reload_data": "Force a reload of the data from the server for the current rows being viewing in the grid by clicking this button. This can be helpful when viewing the grid from within another application like jupyter or nested within another website.",
      "merge": "Merge & Stack (concatenate vertically) dataframes currently loaded into D-Tale or upload additional ones for taht purpose.",
      "low_variance_1": "Show flags on column headers where both these conditions are true:",
      "low_variance_2": "Count of unique values / column size < 10%",
      "low_variance_3": "Count of most common value / Count of second most common value > 20",
      "low_variance_4": "You can view variance information by clicking the \"Variance\" option in the column menu.",
      "xarray_dim_des": "View individual xarray dimensions. You are currently viewing:"
    },
    "column_menu": {
      "Asc": "Asc",
      "Desc": "Desc",
      "None": "None",
      "Move Column To Front": "Move Column To Front",
      "Move Column Left": "Move Column Left",
      "Move Column Right": "Move Column Right",
      "Move Column To Back": "Move Column To Back",
      "Lock": "Lock",
      "Unlock": "Unlock",
      "Hide": "Hide",
      "Delete": "Delete",
      "Rename": "Rename",
      "Replacements": "Replacements",
      "Clean Column": "Clean Column",
      "Column Analysis": "Column Analysis",
      "Variance Report": "Variance Report",
      "Formats": "Formats"
    },
    "builders": {
      "Type Conversion": "Type Conversion",
      "Z-Score Normalize": "Z-Score Normalize",
      "Row Difference": "Row Difference",
      "Name": "Name",
      "Create": "Create",
      "Apply": "Apply",
      "Column Type": "Column Type",
      "Numeric": "Numeric",
      "String": "String",
      "Bins": "Bins",
      "Datetime": "Datetime",
      "Random": "Random",
      "Transform": "Transform",
      "Winsorize": "Winsorize",
      "Similarity": "Similarity",
      "Standardize": "Standardize",
      "Encoder": "Encoder",
      "Cleaning": "Cleaning",
      "numeric": "Add, subtract, multiply or divide two columns of numeric data or static numeric values.",
      "string": "Concatenate columns together to form a string.",
      "bins":  "Convert numeric data into bins using pandas cut or qcut functions.",
      "datetime":  "Pull out properties (minute, hour, time...) or convert to date representations (month-end, month-start, year-end...) using datatime columns.",
      "encoder": "Encode categorical data as indicators using OneHotEncoder, OrdinalEncoder, LabelEncoder or FeatureHasher.",
      "random":  "Build a column of random data for different data types using range rules.",
      "similarity": "Calculate string similarity distances between two columns using one of the following  algorithms: Levenshtein, Damerau-Leveneshtein, Jaro-Winkler, Jaccard Index.",
      "standardize": "Standardize a numeric column for outliers using one of the following scalars from sklearn: RobustScalar, QuantileTransformer, PowerTransformer.",
      "type_conversion":  "Convert columns of one type to another.",
      "transform": "Transform numeric data of one column by grouping on others and applying an aggregation (sum, mean, count...).",
      "winsorize": "Remove outliers in your column by replacing values that fall at or below the lowest percentile with the maximum value in that group and replacing values that fall at or above highest percentile with the minimum value of that group.",
      "zscore_normalize": "Normalize a numeric column by turning it into z-scores. Simply subtract it's mean and divide by it's standard deviation.",
      "cleaning": "Clean string data of punctuation, numbers & other erroneous data using different functions.",
      "diff": "Calculate differences between rows using Pandas` diff() function.",
      "Operation": "Operation",
      "Sum": "Sum",
      "Difference": "Difference",
      "Multiply": "Multiply",
      "Divide": "Divide",
      "Join Character": "Join Character",
      "Col": "Col",
      "Val": "Val",
      "Columns": "Columns",
      "Column": "Column",
      "Labels": "Labels",
      "Cut (Evenly Spaced)": "Cut (Evenly Spaced)",
      "Qcut (Evenly Sized)": "Qcut (Evenly Sized)",
      "Property": "Property",
      "Properties": "Properties",
      "Conversion": "Conversion",
      "Conversions": "Conversions",
      "Minute": "Minute",
      "Hour": "Hour",
      "Time": "Time",
      "Date": "Date",
      "Weekday": "Weekday",
      "Month": "Month",
      "Quarter": "Quarter",
      "Year": "Year",
      "Month Start": "Month Start",
      "Month End": "Month End",
      "Quarter Start": "Quarter Start",
      "Quarter End": "Quarter End",
      "Year Start": "Year Start",
      "Year End": "Year End",
      "Float": "Float",
      "Int": "Int",
      "Choice": "Choice",
      "Bool": "Bool",
      "Category": "Category",
      "Str": "Str",
      "Hex": "Hex",
      "No conversion mappings available for dtype:": "No conversion mappings available for dtype:",
      "Convert To": "Convert To",
      "Unit/Format": "Unit/Format",
      "Column To Convert": "Column To Convert",
      "Date Format": "Date Format",
      "Inplace": "Inplace",
      "New Column": "New Column",
      "Save As": "Save As",
      "Data Type": "Data Type",
      "Low": "Low",
      "High": "High",
      "Default": "Default",
      "Group By": "Group By",
      "Aggregation": "Aggregation",
      "Limits": "Limits",
      "Include Limits": "Include Limits",
      "Lower": "Lower",
      "Upper": "Upper",
      "Left": "Left",
      "Right": "Right",
      "Normalized": "Normalized",
      "Periods": "Periods",
      "Replace Multi-Space w/ Single-Space": "Replace Multi-Space w/ Single-Space",
      "Remove Punctuation": "Remove Punctuation",
      "Drop Stop Words": "Drop Stop Words",
      "Drop NLTK Stop Words": "Drop NLTK Stop Words",
      "Remove Numbers": "Remove Numbers",
      "Keep Only Alpha": "Keep Only Alpha",
      "Normalize Accent Characters": "Normalize Accent Characters",
      "Remove Spaces": "Remove Spaces",
      "Add Space Between Word and Numbers": "Add Space Between Word and Numbers",
      "Remove Repeated Chars": "Remove Repeated Chars",
      "Update Space Values to Empty String": "Update Space Values to Empty String",
      "Remove Hidden Characters": "Remove Hidden Characters",
      "Replace Hyphens w/ Space": "Replace Hyphens w/ Space",
      "Stop Words": "Stop Words",
      "NLTK Language": "NLTK Language",
      "Case": "Case",
      "Title": "Title",
      "Drop Repeated Words": "Drop Repeated Words",
      "Update Word Case": "Update Word Case",
      "Function(s)": "Function(s)",
      "Column(s)": "Column(s)"
    },
    "column_filter": {
      "filter": "For more complex filters use \"Custom Filter\" popup on main menu.",
      "Filter Outliers": "Filter Outliers",
      "Show Only Missing": "Show Only Missing",
      "Less Than": "Less Than",
      "Greater Than": "Greater Than",
      "Less Than or Equal": "Less Than or Equal",
      "Greater Than or Equal": "Greater Than or Equal",
      "Range (Inclusive)": "Range (Inclusive)",
      "Range (Exclusive)": "Range (Exclusive)",
      "Equals": "Equals",
      "Not Equals": "Not Equals",
      "to": "to"
    },
    "about": {
      "Your version is currently out of sync with PyPi.": "Your version is currently out of sync with PyPi.",
      "Please upgrade.": "Please upgrade.",
      "Your Version": "Your Version",
      "PyPi Version": "PyPi Version",
      "GitHub": "GitHub",
      "readthedocs.io": "readthedocs.io"
    },
    "upload": {
      "Load File": "Load File",
      "URL": "URL",
      "Drop data files here to upload, or click to select files": "Drop data files here to upload, or click to select files",
      "Loading File": "Loading File",
      "Load From The Web": "Load From The Web",
      "Load": "Load",
      "Data Type": "Data Type",
      "Proxy": "Proxy",
      "(Optional)": "(Optional)",
      "Sample Datasets": "Sample Datasets",
      "(Requires access to web)": "(Requires access to web)",
      "Last Modified:": "Last Modified:",
      "COVID-19": "COVID-19",
      "Seinfeld": "Seinfeld",
      "The Simpsons": "The Simpsons",
      "Video Games": "Video Games",
      "Movies": "Movies",
      "makeTimeDataFrame": "makeTimeDataFrame",
      "covid": "US COVID-19 data from the NY Times.",
      "seinfeld": "Dataset of all lines by character & season for the tv show Seinfeld (https://github.com/4m4n5/the-seinfeld-chronicles)",
      "simpsons": "Dataset of all lines by character & season (16 seasons) for the tv show The Simpsons",
      "video_games": "Dataset video games and their sales",
      "movies": "Dataset of movies and their release date, director, sales, reviews, etc...",
      "time_dataframe": "Output from running pandas.util.testing.makeTimeDataFrame()"
    },
    "code_export": {
      "Code Export": "Code Export",
      "Copy": "Copy"
    },
    "instance":{
      "Process": "Process",
      "Rows": "Rows",
      "Cols": "Cols",
      "Column Names": "Column Names",
      "Memory Usage (MB)": "Memory Usage (MB)",
      "Preview": "Preview",
      "N/A": "N/A"
    },
    "range_highlight": {
      "Apply To All Columns": "Apply To All Columns",
      "Apply": "Apply"
    },
    "rename": {
      "Update": "Update",
      "Cancel": "Cancel",
      "Current": "Current",
      "New": "New"
    },
    "filter": {
      "Active": "Active",
      "Custom Filters": "Custom Filters",
      "Outlier Filters": "Outlier Filters",
      "wrap column names in backticks that are protected words or containing spaces/periods: ": "wrap column names in backticks that are protected words or containing spaces/periods: ",
      "Active": "Active",
      "Example Queries": "Example Queries",
      "Custom Filter": "Custom Filter",
      "drop NaN values: ": "drop NaN values: ",
      "show only NaN values: ": "show only NaN values: ",
      "date filtering: ": "date filtering: ",
      "in-clause on string column: in-clause on string column: ": "in-clause on string column: ",
      "and-clause on numeric column: ": "and-clause on numeric column: ",
      "or-clause on numeric columns: ": "or-clause on numeric columns: ",
      "negative-clause: ": "negative-clause: ",
      "parenthesis usage: ": "parenthesis usage: ",
      "regex usage (search for substrings 'foo' or 'bar'):": "regex usage (search for substrings 'foo' or 'bar'):",
      "Help": "Help",
      "Clear": "Clear",
      "Apply": "Apply",
      "context_variables_des": "These are initialized via the <var>context_vars</var> argument to dtale.show(), ex: <b>dtale.show(df, context_vars={\"{'foo': [1, 2, 3]}\"})</b><br />They can be referenced in filters by prefixing the variable name with {\"'@'\"}, ex:<b>Col in @foo</b>to only show rows where {\"'Col'\"} is in list {\"'foo'\"}",
      "No context variables are defined.": "No context variables are defined"
    },
    "popup": {
      "Yes/No": "Yes/No",
      " Variance Report for ": " Variance Report for ",
      " Column Analysis for ": " Column Analysis for ",
      " Type Conversion of ": " Type Conversion of ",
      " Clean ": " Clean ",
      " Replacements for ": " Replacements for ",
      "Error": "Error",
      "Active D-Tale Instances": "Active D-Tale Instances"
    },
    "correlations": {
      "(Click on any point in the scatter to filter the grid down to that record)": "(Click on any point in the scatter to filter the grid down to that record)",
      "Correlations Scatter": "Correlations Scatter",
      "Only in": "Only in",
      "Correlated": "Correlated",
      "PPS": "PPS",
      "Pearson": "Pearson",
      "Spearman": "Spearman",
      "vs.": "vs.",
      "No columns found": "No columns found",
      "View Correlation(s) For": "View Correlation(s) For",
      "Pearson Correlation Matrix": "Pearson Correlation Matrix",
      "(Click on any cell to view the details of that correlation)": "(Click on any cell to view the details of that correlation)",
      "Timeseries of Pearson Correlation for": "Timeseries of Pearson Correlation for",
      "Rolling Pearson Correlation (window: ": "Rolling Pearson Correlation (window: ",
      " for ": " for ",
      "Click on any point in the chart to view a scatter plot of the data in that correlation": "Click on any point in the chart to view a scatter plot of the data in that correlation",
      "Click on any point in the chart to view a scatter plot of the data in that rolling correlation": "Click on any point in the chart to view a scatter plot of the data in that rolling correlation",
      "Use Rolling?": "Use Rolling?",
      "(Rolling Mean)": "(Rolling Mean)",
      "Rolling": "Rolling",
      "Window": "Window",
      "(Please edit)": "(Please edit)",
      "Press ENTER to submit": "Press ENTER to submit",
      "Min Periods": "Min Periods",
      "Date Column": "Date Column",
      "Correlations Timeseries": "Correlations Timeseries",
      "Predictive Power Score for ": "Predictive Power Score for "
    }
  }
}